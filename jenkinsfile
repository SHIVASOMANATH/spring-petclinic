pipeline {
    agent { label 'JDK-17' }
    options {
        timeout(time: 1, unit: 'HOURS')
    }
    triggers {
        pollSCM('* * * * *')
    }
    tools {
        jdk 'JDK_17'
        maven 'MAVEN_3.9'
    }
    stages {
        stage ('VCS') {
            steps {
                git url: 'https://github.com/SHIVASOMANATH/spring-petclinic.git',
                    branch: 'develop'
            }
        }
        stage('SonarQube analysis') {
            steps{
    // performing sonarqube analysis with "withSonarQubeENV(<Name of Server configured in Jenkins>)"
            withSonarQubeEnv('SONAR_CLOUD_SHIVA') {
      // requires SonarQube Scanner for Maven 3.2+
            sh 'mvn package sonar:sonar \
               -Dsonar.token=7427c1924e2cdc701360b70bfb84463f0cadc92d\
               -Dsonar.host.url=https://sonarcloud.io \
               -Dsonar.organization=springpetclinic-somanath \
               -Dsonar.projectKey=springpetclinic-somanath_somanath'
                }
            }
        }
    } 
}